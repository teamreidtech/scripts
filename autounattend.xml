<?xml version="1.0" encoding="utf-8"?>
<unattend xmlns="urn:schemas-microsoft-com:unattend" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
	<!--https://schneegans.de/windows/unattend-generator/?LanguageMode=Unattended&UILanguage=en-US&Locale=en-US&Keyboard=00000409&GeoLocation=244&ProcessorArchitecture=amd64&ComputerNameMode=Random&CompactOsMode=Default&TimeZoneMode=Explicit&TimeZone=Pacific+Standard+Time&PartitionMode=Custom&DiskpartScript=SELECT+DISK%3D0%0D%0ACLEAN%0D%0ACONVERT+GPT%0D%0ACREATE+PARTITION+EFI+SIZE%3D500%0D%0AFORMAT+QUICK+FS%3DFAT32+LABEL%3D%22System%22%0D%0ACREATE+PARTITION+MSR+SIZE%3D16%0D%0ACREATE+PARTITION+PRIMARY%0D%0ASHRINK+MINIMUM%3D1000%0D%0AFORMAT+QUICK+FS%3DNTFS+LABEL%3D%22Windows%22%0D%0ACREATE+PARTITION+PRIMARY%0D%0AFORMAT+QUICK+FS%3DNTFS+LABEL%3D%22Recovery%22%0D%0ASET+ID%3D%22de94bba4-06d1-4d40-a16a-bfd50179d6ac%22%0D%0AGPT+ATTRIBUTES%3D0x8000000000000001&InstallToMode=Custom&InstallToDisk=0&InstallToPartition=3&WindowsEditionMode=Firmware&UserAccountMode=Unattended&AccountName0=Master&AccountDisplayName0=&AccountPassword0=BigBird51%21&AccountGroup0=Administrators&AccountName1=&AccountName2=&AccountName3=&AccountName4=&AutoLogonMode=Own&PasswordExpirationMode=Unlimited&LockoutMode=Default&HideFiles=Hidden&ShowFileExtensions=true&LaunchToThisPC=true&TaskbarSearch=Label&TaskbarIconsMode=Default&DisableWidgets=true&HideTaskViewButton=true&StartTilesMode=Default&StartPinsMode=Default&EnableLongPaths=true&HardenSystemDriveAcl=true&DisableAppSuggestions=true&EffectsMode=Default&DesktopIconsMode=Default&WifiMode=Interactive&ExpressSettings=DisableAll&KeysMode=Skip&ColorMode=Default&WallpaperMode=Default&Remove3DViewer=true&RemoveClock=true&RemoveFeedbackHub=true&RemoveGetHelp=true&RemoveMailCalendar=true&RemoveMaps=true&RemoveZuneVideo=true&RemoveNews=true&RemoveOneNote=true&RemoveOutlook=true&RemovePeople=true&RemoveSkype=true&RemoveTeams=true&RemoveVoiceRecorder=true&RemoveWallet=true&RemoveWeather=true&RemoveFaxAndScan=true&RemoveYourPhone=true&SystemScript0=%3C%23%0D%0A.SYNOPSIS%0D%0A++++Remove+built-in+apps+%28modern+apps%29+from+Windows+11+for+All+Users.%0D%0A%0D%0A.DESCRIPTION%0D%0A++++This+script+will+remove+all+built-in+apps+that+are+specified+in+the+%27blacklistedapps%27+variable.%0D%0A++++The+Black+list+%28txt+file%29+is+hosted+in+Azure+Blob+storage+or+GitHub+so+it+can+be+dynamically+updated.%0D%0A++++Built-in+apps+listed+in+the+txt+file+that+are+prefixed+with+a+%23+will+be+considered+eligible+for+removal.%0D%0A%0D%0A++++%23%23WARNING%23%23+%0D%0A++++Use+with+caution%2C+restoring+deleted+provisioning+packages+is+not+a+simple+process.%0D%0A%0D%0A++++%23%23TIP%23%23%0D%0A++++If+removing+%22MicrosoftTeams%22%2C+also+consider+disabling+the+%22Chat%22+icon+on+the+taskbar%2C+using+INtune+settingd+catalog%2C+as+clicking+this+will+re-install+the+appxpackage+for+the+user.%0D%0A%0D%0A.NOTES%0D%0A%0D%0A++++Idea+based+on+an+original+script+for+Windows+10+app+removal+%2F+Credit+to%3A+Nickolaj+Andersen+%40+MSEndpointMgr%0D%0A++++Modifications+to+original+script+to+Black+list+Appx+instead+of+Whitelist%0D%0A%0D%0A++++FileName%3A++++Remove-Appx-AllUsers-CloudSourceList.ps1%0D%0A++++Author%3A++++++Ben+Whitmore%0D%0A++++Contact%3A+++++%40byteben%0D%0A++++Date%3A++++++++27th+June+2022%0D%0A%0D%0A%23%3E%0D%0A%0D%0ABegin+%7B%0D%0A%0D%0A++++%23Log+Function%0D%0A++++function+Write-LogEntry+%7B%0D%0A++++++++param+%28%0D%0A++++++++++++%5Bparameter%28Mandatory+%3D+%24true%29%5D%0D%0A++++++++++++%5BValidateNotNullOrEmpty%28%29%5D%0D%0A++++++++++++%5Bstring%5D%24Value%2C%0D%0A++++++++++++%5Bparameter%28Mandatory+%3D+%24false%29%5D%0D%0A++++++++++++%5BValidateNotNullOrEmpty%28%29%5D%0D%0A++++++++++++%5Bstring%5D%24FileName+%3D+%22AppXRemoval.log%22%2C%0D%0A++++++++++++%5Bswitch%5D%24Stamp%0D%0A++++++++%29%0D%0A++++%0D%0A++++++++%23Build+Log+File+appending+System+Date%2FTime+to+output%0D%0A++++++++%24LogFile+%3D+Join-Path+-Path+%24env%3ASystemRoot+-ChildPath+%24%28%22Temp%5C%24FileName%22%29%0D%0A++++++++%24Time+%3D+-join+%40%28%28Get-Date+-Format+%22HH%3Amm%3Ass.fff%22%29%2C+%22+%22%2C+%28Get-WmiObject+-Class+Win32_TimeZone+%7C+Select-Object+-ExpandProperty+Bias%29%29%0D%0A++++++++%24Date+%3D+%28Get-Date+-Format+%22MM-dd-yyyy%22%29%0D%0A++++%0D%0A++++++++If+%28%24Stamp%29+%7B%0D%0A++++++++++++%24LogText+%3D+%22%3C%24%28%24Value%29%3E+%3Ctime%3D%22%22%24%28%24Time%29%22%22+date%3D%22%22%24%28%24Date%29%22%22%3E%22%0D%0A++++++++%7D%0D%0A++++++++else+%7B%0D%0A++++++++++++%24LogText+%3D+%22%24%28%24Value%29%22+++%0D%0A++++++++%7D%0D%0A++++++++%0D%0A++++++++Try+%7B%0D%0A++++++++++++Out-File+-InputObject+%24LogText+-Append+-NoClobber+-Encoding+Default+-FilePath+%24LogFile+-ErrorAction+Stop%0D%0A++++++++%7D%0D%0A++++++++Catch+%5BSystem.Exception%5D+%7B%0D%0A++++++++++++Write-Warning+-Message+%22Unable+to+add+log+entry+to+%24LogFile.log+file.+Error+message+at+line+%24%28%24_.InvocationInfo.ScriptLineNumber%29%3A+%24%28%24_.Exception.Message%29%22%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A++++%0D%0A++++%23Function+to+Remove+AppxProvisionedPackage%0D%0A++++Function+Remove-AppxProvisionedPackageCustom+%7B%0D%0A++++%0D%0A++++++++%23+Attempt+to+remove+AppxProvisioningPackage%0D%0A++++++++if+%28%21%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24BlackListedApp%29%29%29+%7B%0D%0A++++++++++++try+%7B%0D%0A++++++++++++++++%0D%0A++++++++++++++++%23+Get+Package+Name%0D%0A++++++++++++++++%24AppProvisioningPackageName+%3D+Get-AppxProvisionedPackage+-Online+%7C+Where-Object+%7B+%24_.DisplayName+-like+%24BlackListedApp+%7D+%7C+Select-Object+-ExpandProperty+PackageName+-First+1%0D%0A++++++++++++++++Write-Host+%22%24%28%24BlackListedApp%29+found.+Attempting+removal+...+%22+-NoNewline%0D%0A++++++++++++++++Write-LogEntry+-Value+%22%24%28%24BlackListedApp%29+found.+Attempting+removal+...+%22%0D%0A++++%0D%0A++++++++++++++++%23+Attempt+removeal%0D%0A++++++++++++++++%24RemoveAppx+%3D+Remove-AppxProvisionedPackage+-PackageName+%24AppProvisioningPackageName+-Online+-AllUsers%0D%0A++++++++++++++++++++%0D%0A++++++++++++++++%23Re-check+existence%0D%0A++++++++++++++++%24AppProvisioningPackageNameReCheck+%3D+Get-AppxProvisionedPackage+-Online+%7C+Where-Object+%7B+%24_.DisplayName+-like+%24BlackListedApp+%7D+%7C+Select-Object+-ExpandProperty+PackageName+-First+1%0D%0A++++%0D%0A++++++++++++++++If+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24AppProvisioningPackageNameReCheck%29+-and+%28%24RemoveAppx.Online+-eq+%24true%29%29+%7B%0D%0A++++++++++++++++++++Write-Host+%40CheckIcon%0D%0A++++++++++++++++++++Write-Host+%22+%28Removed%29%22%0D%0A++++++++++++++++++++Write-LogEntry+-Value+%22%24%28%24BlackListedApp%29+removed%22%0D%0A++++++++++++++++%7D%0D%0A++++++++++++%7D%0D%0A++++++++++++catch+%5BSystem.Exception%5D+%7B%0D%0A++++++++++++++++Write-Host+%22+%28Failed%29%22%0D%0A++++++++++++++++Write-LogEntry+-Value+%22Failed+to+remove+%24%28%24BlackListedApp%29%22%0D%0A++++++++++++%7D%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A%0D%0A++++Write-LogEntry+-Value+%22%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%22%0D%0A++++Write-LogEntry+-Stamp+-Value+%22Remove-Appx+Started%22%0D%0A++++Write-LogEntry+-Value+%22%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%22%0D%0A%0D%0A++++%23+Black+List+of+Appx+Provisioned+Packages+to+Remove+for+All+Users%0D%0A++++%24BlackListedAppsURL+%3D+%24null%0D%0A++++%24BlackListedAppsURL+%3D+%22https%3A%2F%2Fraw.githubusercontent.com%2Fteamreidtech%2Fscripts%2Fmain%2FDefaultApps-Blacklist-With-XBOX.txt%22%0D%0A++++Write-LogEntry+-Value+%22BlackListedAppsURL%3A%24%28%24BlackListedAppsURL%29%22%0D%0A%0D%0A++++%23Attempt+to+obtain+list+of+BlackListedApps%0D%0A++++Try+%7B%0D%0A++++++++%24BlackListedAppsFile+%3D+%24null%0D%0A++++++++%24BlackListedAppsFile+%3D+%28New-Object+System.Net.WebClient%29.DownloadString%28%24BlackListedAppsURL%29%0D%0A++++%7D+%0D%0A++++Catch+%7B%0D%0A++++++++Write-Warning+%24_.Exception%0D%0A++++%7D%0D%0A%0D%0A++++%23Read+apps+from+file+and+split+lines%0D%0A++++%24BlackListedAppsConvertToArray+%3D+%24BlackListedAppsFile+-split+%22%60n%22+%7C+Foreach-Object+%7B+%24_.trim%28%29+%7D%0D%0A++++%0D%0A++++%23Create+array+of+bad+apps%0D%0A++++%24BlackListedAppsArray+%3D+New-Object+-TypeName+System.Collections.ArrayList%0D%0A++++Foreach+%28%24App+in+%24BlackListedAppsConvertToArray%29+%7B%0D%0A++++++++If+%28%24App+-like+%22%23*%22%29+%7B%0D%0A++++++++++++%24App+%3D+%24App.trimStart%28%22%23%22%29%0D%0A++++++++++++%24BlackListedAppsArray.AddRange%28%40%28%24App%29%29%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A%0D%0A++++%23Define+Icons%0D%0A++++%24CheckIcon+%3D+%40%7B%0D%0A++++++++Object++++++++++%3D+%5BChar%5D8730%0D%0A++++++++ForegroundColor+%3D+%27Green%27%0D%0A++++++++NoNewLine+++++++%3D+%24true%0D%0A++++%7D%0D%0A%0D%0A++++%23Define+App+Count%0D%0A++++%5Bint%5D%24AppCount+%3D+0%0D%0A%0D%0A++++%23OS+Check%0D%0A++++%24OS+%3D+%28Get-CimInstance+-ClassName+Win32_OperatingSystem%29.BuildNumber%0D%0A++++Switch+-Wildcard+%28+%24OS+%29+%7B%0D%0A++++++++%2721*%27+%7B%0D%0A++++++++++++%24OSVer+%3D+%22Windows+10%22%0D%0A++++++++++++Write-Warning+%22This+script+is+intended+for+use+on+Windows+11+devices.+%24%28%24OSVer%29+was+detected...%22%0D%0A++++++++++++Write-LogEntry+-Value+%22This+script+is+intended+for+use+on+Windows+11+devices.+%24%28%24OSVer%29+was+detected...%22%0D%0A%0D%0A++++++++++++Exit+1%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A%7D%0D%0A%0D%0AProcess+%7B%0D%0A%0D%0A++++If+%28%24%28%24BlackListedAppsArray.Count%29+-ne+0%29+%7B%0D%0A%0D%0A++++++++Write-Output+%60n%22The+following+%24%28%24BlackListedAppsArray.Count%29+apps+were+targeted+for+removal+from+the+device%3A-%22%0D%0A++++++++Write-LogEntry+-Value+%22The+following+%24%28%24BlackListedAppsArray.Count%29+apps+were+targeted+for+removal+from+the+device%3A-%22%0D%0A++++++++Write-LogEntry+-Value+%22Apps+marked+for+removal%3A%24%28%24BlackListedAppsArray%29%22%0D%0A++++++++Write-Output+%22%22%0D%0A++++++++%24BlackListedAppsArray%0D%0A%0D%0A++++++++%23Initialize+list+for+apps+not+targeted%0D%0A++++++++%24AppNotTargetedList+%3D+New-Object+-TypeName+System.Collections.ArrayList%0D%0A%0D%0A++++++++%23+Get+Appx+Provisioned+Packages%0D%0A++++++++Write-Output+%60n%22Gathering+installed+Appx+Provisioned+Packages...%22%0D%0A++++++++Write-LogEntry+-Value+%22Gathering+installed+Appx+Provisioned+Packages...%22%0D%0A++++++++Write-Output+%22%22%0D%0A++++++++%24AppArray+%3D+Get-AppxProvisionedPackage+-Online+%7C+Select-Object+-ExpandProperty+DisplayName%0D%0A%0D%0A++++++++%23+Loop+through+each+Provisioned+Package%0D%0A++++++++foreach+%28%24BlackListedApp+in+%24BlackListedAppsArray%29+%7B%0D%0A%0D%0A++++++++++++%23+Function+call+to+Remove+Appx+Provisioned+Packages+defined+in+the+Black+List%0D%0A++++++++++++if+%28%28%24BlackListedApp+-in+%24AppArray%29%29+%7B%0D%0A++++++++++++++++%24AppCount+%2B%2B%0D%0A++++++++++++++++Try+%7B%0D%0A++++++++++++++++++++Remove-AppxProvisionedPackageCustom+-BlackListedApp+%24BlackListedApp+-ErrorAction+Stop%0D%0A++++++++++++++++%7D%0D%0A++++++++++++++++Catch+%7B%0D%0A++++++++++++++++++++Write-Warning+%60n%22There+was+an+error+while+attempting+to+remove+%24%28%24BlakListedApp%29%22%0D%0A++++++++++++++++++++Write-LogEntry+-Value+%22There+was+an+error+when+attempting+to+remove+%24%28%24BlakListedApp%29%22%0D%0A++++++++++++++++%7D%0D%0A++++++++++++%7D%0D%0A++++++++++++else+%7B%0D%0A++++++++++++++++%24AppNotTargetedList.AddRange%28%40%28%24BlackListedApp%29%29%0D%0A++++++++++++%7D%0D%0A++++++++%7D%0D%0A%0D%0A++++++++%23Update+Output+Information%0D%0A++++++++If+%28%21%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24AppNotTargetedList%29%29%29+%7B+%0D%0A++++++++++++Write-Output+%60n%22The+following+apps+were+not+removed.+Either+they+were+already+removed+or+the+Package+Name+is+invalid%3A-%22%0D%0A++++++++++++Write-LogEntry+-Value+%22The+following+apps+were+not+removed.+Either+they+were+already+removed+or+the+Package+Name+is+invalid%3A-%22%0D%0A++++++++++++Write-LogEntry+-Value+%22%24%28%24AppNotTargetedList%29%22%0D%0A++++++++++++Write-Output+%22%22%0D%0A++++++++++++%24AppNotTargetedList%0D%0A++++++++%7D%0D%0A++++++++If+%28%24AppCount+-eq+0%29+%7B%0D%0A++++++++++++Write-Output+%60n%22No+apps+were+removed.+Most+likely+reason+is+they+had+been+removed+previously.%22%0D%0A++++++++++++Write-LogEntry+-Value+%22No+apps+were+removed.+Most+likely+reason+is+they+had+been+removed+previously.%22%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A++++else+%7B%0D%0A++++++++Write-Output+%22No+Black+List+Apps+defined+in+array%22%0D%0A++++++++Write-LogEntry+-Value+%22No+Black+List+Apps+defined+in+array%22%0D%0A++++%7D%0D%0A%7D&SystemScriptType0=Ps1&FirstLogonScript0=%3C%23%0D%0A.SYNOPSIS%0D%0A++++Remove+built-in+apps+%28modern+apps%29+from+Windows+11+for+All+Users.%0D%0A%0D%0A.DESCRIPTION%0D%0A++++This+script+will+remove+all+built-in+apps+that+are+specified+in+the+%27blacklistedapps%27+variable.%0D%0A++++The+Black+list+%28txt+file%29+is+hosted+in+Azure+Blob+storage+or+GitHub+so+it+can+be+dynamically+updated.%0D%0A++++Built-in+apps+listed+in+the+txt+file+that+are+prefixed+with+a+%23+will+be+considered+eligible+for+removal.%0D%0A%0D%0A++++%23%23WARNING%23%23+%0D%0A++++Use+with+caution%2C+restoring+deleted+provisioning+packages+is+not+a+simple+process.%0D%0A%0D%0A++++%23%23TIP%23%23%0D%0A++++If+removing+%22MicrosoftTeams%22%2C+also+consider+disabling+the+%22Chat%22+icon+on+the+taskbar%2C+using+INtune+settingd+catalog%2C+as+clicking+this+will+re-install+the+appxpackage+for+the+user.%0D%0A%0D%0A.NOTES%0D%0A%0D%0A++++Idea+based+on+an+original+script+for+Windows+10+app+removal+%2F+Credit+to%3A+Nickolaj+Andersen+%40+MSEndpointMgr%0D%0A++++Modifications+to+original+script+to+Black+list+Appx+instead+of+Whitelist%0D%0A%0D%0A++++FileName%3A++++Remove-Appx-AllUsers-CloudSourceList.ps1%0D%0A++++Author%3A++++++Ben+Whitmore%0D%0A++++Contact%3A+++++%40byteben%0D%0A++++Date%3A++++++++27th+June+2022%0D%0A%0D%0A%23%3E%0D%0A%0D%0ABegin+%7B%0D%0A%0D%0A++++%23Log+Function%0D%0A++++function+Write-LogEntry+%7B%0D%0A++++++++param+%28%0D%0A++++++++++++%5Bparameter%28Mandatory+%3D+%24true%29%5D%0D%0A++++++++++++%5BValidateNotNullOrEmpty%28%29%5D%0D%0A++++++++++++%5Bstring%5D%24Value%2C%0D%0A++++++++++++%5Bparameter%28Mandatory+%3D+%24false%29%5D%0D%0A++++++++++++%5BValidateNotNullOrEmpty%28%29%5D%0D%0A++++++++++++%5Bstring%5D%24FileName+%3D+%22AppXRemoval.log%22%2C%0D%0A++++++++++++%5Bswitch%5D%24Stamp%0D%0A++++++++%29%0D%0A++++%0D%0A++++++++%23Build+Log+File+appending+System+Date%2FTime+to+output%0D%0A++++++++%24LogFile+%3D+Join-Path+-Path+%24env%3ASystemRoot+-ChildPath+%24%28%22Temp%5C%24FileName%22%29%0D%0A++++++++%24Time+%3D+-join+%40%28%28Get-Date+-Format+%22HH%3Amm%3Ass.fff%22%29%2C+%22+%22%2C+%28Get-WmiObject+-Class+Win32_TimeZone+%7C+Select-Object+-ExpandProperty+Bias%29%29%0D%0A++++++++%24Date+%3D+%28Get-Date+-Format+%22MM-dd-yyyy%22%29%0D%0A++++%0D%0A++++++++If+%28%24Stamp%29+%7B%0D%0A++++++++++++%24LogText+%3D+%22%3C%24%28%24Value%29%3E+%3Ctime%3D%22%22%24%28%24Time%29%22%22+date%3D%22%22%24%28%24Date%29%22%22%3E%22%0D%0A++++++++%7D%0D%0A++++++++else+%7B%0D%0A++++++++++++%24LogText+%3D+%22%24%28%24Value%29%22+++%0D%0A++++++++%7D%0D%0A++++++++%0D%0A++++++++Try+%7B%0D%0A++++++++++++Out-File+-InputObject+%24LogText+-Append+-NoClobber+-Encoding+Default+-FilePath+%24LogFile+-ErrorAction+Stop%0D%0A++++++++%7D%0D%0A++++++++Catch+%5BSystem.Exception%5D+%7B%0D%0A++++++++++++Write-Warning+-Message+%22Unable+to+add+log+entry+to+%24LogFile.log+file.+Error+message+at+line+%24%28%24_.InvocationInfo.ScriptLineNumber%29%3A+%24%28%24_.Exception.Message%29%22%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A++++%0D%0A++++%23Function+to+Remove+AppxProvisionedPackage%0D%0A++++Function+Remove-AppxProvisionedPackageCustom+%7B%0D%0A++++%0D%0A++++++++%23+Attempt+to+remove+AppxProvisioningPackage%0D%0A++++++++if+%28%21%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24BlackListedApp%29%29%29+%7B%0D%0A++++++++++++try+%7B%0D%0A++++++++++++++++%0D%0A++++++++++++++++%23+Get+Package+Name%0D%0A++++++++++++++++%24AppProvisioningPackageName+%3D+Get-AppxProvisionedPackage+-Online+%7C+Where-Object+%7B+%24_.DisplayName+-like+%24BlackListedApp+%7D+%7C+Select-Object+-ExpandProperty+PackageName+-First+1%0D%0A++++++++++++++++Write-Host+%22%24%28%24BlackListedApp%29+found.+Attempting+removal+...+%22+-NoNewline%0D%0A++++++++++++++++Write-LogEntry+-Value+%22%24%28%24BlackListedApp%29+found.+Attempting+removal+...+%22%0D%0A++++%0D%0A++++++++++++++++%23+Attempt+removeal%0D%0A++++++++++++++++%24RemoveAppx+%3D+Remove-AppxProvisionedPackage+-PackageName+%24AppProvisioningPackageName+-Online+-AllUsers%0D%0A++++++++++++++++++++%0D%0A++++++++++++++++%23Re-check+existence%0D%0A++++++++++++++++%24AppProvisioningPackageNameReCheck+%3D+Get-AppxProvisionedPackage+-Online+%7C+Where-Object+%7B+%24_.DisplayName+-like+%24BlackListedApp+%7D+%7C+Select-Object+-ExpandProperty+PackageName+-First+1%0D%0A++++%0D%0A++++++++++++++++If+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24AppProvisioningPackageNameReCheck%29+-and+%28%24RemoveAppx.Online+-eq+%24true%29%29+%7B%0D%0A++++++++++++++++++++Write-Host+%40CheckIcon%0D%0A++++++++++++++++++++Write-Host+%22+%28Removed%29%22%0D%0A++++++++++++++++++++Write-LogEntry+-Value+%22%24%28%24BlackListedApp%29+removed%22%0D%0A++++++++++++++++%7D%0D%0A++++++++++++%7D%0D%0A++++++++++++catch+%5BSystem.Exception%5D+%7B%0D%0A++++++++++++++++Write-Host+%22+%28Failed%29%22%0D%0A++++++++++++++++Write-LogEntry+-Value+%22Failed+to+remove+%24%28%24BlackListedApp%29%22%0D%0A++++++++++++%7D%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A%0D%0A++++Write-LogEntry+-Value+%22%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%22%0D%0A++++Write-LogEntry+-Stamp+-Value+%22Remove-Appx+Started%22%0D%0A++++Write-LogEntry+-Value+%22%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%22%0D%0A%0D%0A++++%23+Black+List+of+Appx+Provisioned+Packages+to+Remove+for+All+Users%0D%0A++++%24BlackListedAppsURL+%3D+%24null%0D%0A++++%24BlackListedAppsURL+%3D+%22https%3A%2F%2Fraw.githubusercontent.com%2Fteamreidtech%2Fscripts%2Fmain%2FDefaultApps-Blacklist-With-XBOX.txt%22%0D%0A++++Write-LogEntry+-Value+%22BlackListedAppsURL%3A%24%28%24BlackListedAppsURL%29%22%0D%0A%0D%0A++++%23Attempt+to+obtain+list+of+BlackListedApps%0D%0A++++Try+%7B%0D%0A++++++++%24BlackListedAppsFile+%3D+%24null%0D%0A++++++++%24BlackListedAppsFile+%3D+%28New-Object+System.Net.WebClient%29.DownloadString%28%24BlackListedAppsURL%29%0D%0A++++%7D+%0D%0A++++Catch+%7B%0D%0A++++++++Write-Warning+%24_.Exception%0D%0A++++%7D%0D%0A%0D%0A++++%23Read+apps+from+file+and+split+lines%0D%0A++++%24BlackListedAppsConvertToArray+%3D+%24BlackListedAppsFile+-split+%22%60n%22+%7C+Foreach-Object+%7B+%24_.trim%28%29+%7D%0D%0A++++%0D%0A++++%23Create+array+of+bad+apps%0D%0A++++%24BlackListedAppsArray+%3D+New-Object+-TypeName+System.Collections.ArrayList%0D%0A++++Foreach+%28%24App+in+%24BlackListedAppsConvertToArray%29+%7B%0D%0A++++++++If+%28%24App+-like+%22%23*%22%29+%7B%0D%0A++++++++++++%24App+%3D+%24App.trimStart%28%22%23%22%29%0D%0A++++++++++++%24BlackListedAppsArray.AddRange%28%40%28%24App%29%29%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A%0D%0A++++%23Define+Icons%0D%0A++++%24CheckIcon+%3D+%40%7B%0D%0A++++++++Object++++++++++%3D+%5BChar%5D8730%0D%0A++++++++ForegroundColor+%3D+%27Green%27%0D%0A++++++++NoNewLine+++++++%3D+%24true%0D%0A++++%7D%0D%0A%0D%0A++++%23Define+App+Count%0D%0A++++%5Bint%5D%24AppCount+%3D+0%0D%0A%0D%0A++++%23OS+Check%0D%0A++++%24OS+%3D+%28Get-CimInstance+-ClassName+Win32_OperatingSystem%29.BuildNumber%0D%0A++++Switch+-Wildcard+%28+%24OS+%29+%7B%0D%0A++++++++%2721*%27+%7B%0D%0A++++++++++++%24OSVer+%3D+%22Windows+10%22%0D%0A++++++++++++Write-Warning+%22This+script+is+intended+for+use+on+Windows+11+devices.+%24%28%24OSVer%29+was+detected...%22%0D%0A++++++++++++Write-LogEntry+-Value+%22This+script+is+intended+for+use+on+Windows+11+devices.+%24%28%24OSVer%29+was+detected...%22%0D%0A%0D%0A++++++++++++Exit+1%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A%7D%0D%0A%0D%0AProcess+%7B%0D%0A%0D%0A++++If+%28%24%28%24BlackListedAppsArray.Count%29+-ne+0%29+%7B%0D%0A%0D%0A++++++++Write-Output+%60n%22The+following+%24%28%24BlackListedAppsArray.Count%29+apps+were+targeted+for+removal+from+the+device%3A-%22%0D%0A++++++++Write-LogEntry+-Value+%22The+following+%24%28%24BlackListedAppsArray.Count%29+apps+were+targeted+for+removal+from+the+device%3A-%22%0D%0A++++++++Write-LogEntry+-Value+%22Apps+marked+for+removal%3A%24%28%24BlackListedAppsArray%29%22%0D%0A++++++++Write-Output+%22%22%0D%0A++++++++%24BlackListedAppsArray%0D%0A%0D%0A++++++++%23Initialize+list+for+apps+not+targeted%0D%0A++++++++%24AppNotTargetedList+%3D+New-Object+-TypeName+System.Collections.ArrayList%0D%0A%0D%0A++++++++%23+Get+Appx+Provisioned+Packages%0D%0A++++++++Write-Output+%60n%22Gathering+installed+Appx+Provisioned+Packages...%22%0D%0A++++++++Write-LogEntry+-Value+%22Gathering+installed+Appx+Provisioned+Packages...%22%0D%0A++++++++Write-Output+%22%22%0D%0A++++++++%24AppArray+%3D+Get-AppxProvisionedPackage+-Online+%7C+Select-Object+-ExpandProperty+DisplayName%0D%0A%0D%0A++++++++%23+Loop+through+each+Provisioned+Package%0D%0A++++++++foreach+%28%24BlackListedApp+in+%24BlackListedAppsArray%29+%7B%0D%0A%0D%0A++++++++++++%23+Function+call+to+Remove+Appx+Provisioned+Packages+defined+in+the+Black+List%0D%0A++++++++++++if+%28%28%24BlackListedApp+-in+%24AppArray%29%29+%7B%0D%0A++++++++++++++++%24AppCount+%2B%2B%0D%0A++++++++++++++++Try+%7B%0D%0A++++++++++++++++++++Remove-AppxProvisionedPackageCustom+-BlackListedApp+%24BlackListedApp+-ErrorAction+Stop%0D%0A++++++++++++++++%7D%0D%0A++++++++++++++++Catch+%7B%0D%0A++++++++++++++++++++Write-Warning+%60n%22There+was+an+error+while+attempting+to+remove+%24%28%24BlakListedApp%29%22%0D%0A++++++++++++++++++++Write-LogEntry+-Value+%22There+was+an+error+when+attempting+to+remove+%24%28%24BlakListedApp%29%22%0D%0A++++++++++++++++%7D%0D%0A++++++++++++%7D%0D%0A++++++++++++else+%7B%0D%0A++++++++++++++++%24AppNotTargetedList.AddRange%28%40%28%24BlackListedApp%29%29%0D%0A++++++++++++%7D%0D%0A++++++++%7D%0D%0A%0D%0A++++++++%23Update+Output+Information%0D%0A++++++++If+%28%21%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24AppNotTargetedList%29%29%29+%7B+%0D%0A++++++++++++Write-Output+%60n%22The+following+apps+were+not+removed.+Either+they+were+already+removed+or+the+Package+Name+is+invalid%3A-%22%0D%0A++++++++++++Write-LogEntry+-Value+%22The+following+apps+were+not+removed.+Either+they+were+already+removed+or+the+Package+Name+is+invalid%3A-%22%0D%0A++++++++++++Write-LogEntry+-Value+%22%24%28%24AppNotTargetedList%29%22%0D%0A++++++++++++Write-Output+%22%22%0D%0A++++++++++++%24AppNotTargetedList%0D%0A++++++++%7D%0D%0A++++++++If+%28%24AppCount+-eq+0%29+%7B%0D%0A++++++++++++Write-Output+%60n%22No+apps+were+removed.+Most+likely+reason+is+they+had+been+removed+previously.%22%0D%0A++++++++++++Write-LogEntry+-Value+%22No+apps+were+removed.+Most+likely+reason+is+they+had+been+removed+previously.%22%0D%0A++++++++%7D%0D%0A++++%7D%0D%0A++++else+%7B%0D%0A++++++++Write-Output+%22No+Black+List+Apps+defined+in+array%22%0D%0A++++++++Write-LogEntry+-Value+%22No+Black+List+Apps+defined+in+array%22%0D%0A++++%7D%0D%0A%7D&FirstLogonScriptType0=Ps1&FirstLogonScript1=winget+install+Adobe.Acrobat.Reader.64-bit+%2D%2Dexact+%2D%2Dsilent+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements+%2D%2Ddisable-interactivity+%2D%2Dignore-warnings%0D%0Awinget+install+Dell.CommandUpdate.Universal+%2D%2Dexact+%2D%2Dsilent+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements+%2D%2Ddisable-interactivity+%2D%2Dignore-warnings%0D%0A&FirstLogonScriptType1=Ps1&WdacMode=Skip-->
	<settings pass="offlineServicing"></settings>
	<settings pass="windowsPE">
		<component name="Microsoft-Windows-International-Core-WinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<SetupUILanguage>
				<UILanguage>en-US</UILanguage>
			</SetupUILanguage>
			<InputLocale>0409:00000409</InputLocale>
			<SystemLocale>en-US</SystemLocale>
			<UILanguage>en-US</UILanguage>
			<UserLocale>en-US</UserLocale>
		</component>
		<component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<ImageInstall>
				<OSImage>
					<InstallTo>
						<DiskID>0</DiskID>
						<PartitionID>3</PartitionID>
					</InstallTo>
				</OSImage>
			</ImageInstall>
			<UserData>
				<ProductKey>
					<Key>00000-00000-00000-00000-00000</Key>
					<WillShowUI>OnError</WillShowUI>
				</ProductKey>
				<AcceptEula>true</AcceptEula>
			</UserData>
			<UseConfigurationSet>false</UseConfigurationSet>
			<RunSynchronous>
				<RunSynchronousCommand wcm:action="add">
					<Order>1</Order>
					<Path>cmd.exe /c "&gt;&gt;"X:\diskpart.txt" (echo SELECT DISK=0&amp;echo CLEAN&amp;echo CONVERT GPT&amp;echo CREATE PARTITION EFI SIZE=500&amp;echo FORMAT QUICK FS=FAT32 LABEL="System"&amp;echo CREATE PARTITION MSR SIZE=16)"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>2</Order>
					<Path>cmd.exe /c "&gt;&gt;"X:\diskpart.txt" (echo CREATE PARTITION PRIMARY&amp;echo SHRINK MINIMUM=1000&amp;echo FORMAT QUICK FS=NTFS LABEL="Windows"&amp;echo CREATE PARTITION PRIMARY&amp;echo FORMAT QUICK FS=NTFS LABEL="Recovery")"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>3</Order>
					<Path>cmd.exe /c "&gt;&gt;"X:\diskpart.txt" (echo SET ID="de94bba4-06d1-4d40-a16a-bfd50179d6ac"&amp;echo GPT ATTRIBUTES=0x8000000000000001)"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>4</Order>
					<Path>cmd.exe /c "diskpart.exe /s "X:\diskpart.txt" &gt;&gt;"X:\diskpart.log" || ( type "X:\diskpart.log" &amp; echo diskpart encountered an error. &amp; pause &amp; exit /b 1 )"</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
	</settings>
	<settings pass="generalize"></settings>
	<settings pass="specialize">
		<component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<RunSynchronous>
				<RunSynchronousCommand wcm:action="add">
					<Order>1</Order>
					<Path>powershell.exe -NoProfile -Command "$xml = [xml]::new(); $xml.Load('C:\Windows\Panther\unattend.xml'); $sb = [scriptblock]::Create( $xml.unattend.Extensions.ExtractScript ); Invoke-Command -ScriptBlock $sb -ArgumentList $xml;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>2</Order>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\Specialize.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>3</Order>
					<Path>reg.exe load "HKU\DefaultUser" "C:\Users\Default\NTUSER.DAT"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>4</Order>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\DefaultUser.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>5</Order>
					<Path>reg.exe unload "HKU\DefaultUser"</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<TimeZone>Pacific Standard Time</TimeZone>
		</component>
	</settings>
	<settings pass="auditSystem"></settings>
	<settings pass="auditUser"></settings>
	<settings pass="oobeSystem">
		<component name="Microsoft-Windows-International-Core" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<InputLocale>0409:00000409</InputLocale>
			<SystemLocale>en-US</SystemLocale>
			<UILanguage>en-US</UILanguage>
			<UserLocale>en-US</UserLocale>
		</component>
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<UserAccounts>
				<LocalAccounts>
					<LocalAccount wcm:action="add">
						<Name>Master</Name>
						<DisplayName></DisplayName>
						<Group>Administrators</Group>
						<Password>
							<Value>BigBird51!</Value>
							<PlainText>true</PlainText>
						</Password>
					</LocalAccount>
				</LocalAccounts>
			</UserAccounts>
			<AutoLogon>
				<Username>Master</Username>
				<Enabled>true</Enabled>
				<LogonCount>1</LogonCount>
				<Password>
					<Value>BigBird51!</Value>
					<PlainText>true</PlainText>
				</Password>
			</AutoLogon>
			<OOBE>
				<ProtectYourPC>3</ProtectYourPC>
				<HideEULAPage>true</HideEULAPage>
				<HideWirelessSetupInOOBE>false</HideWirelessSetupInOOBE>
				<HideOnlineAccountScreens>false</HideOnlineAccountScreens>
			</OOBE>
			<FirstLogonCommands>
				<SynchronousCommand wcm:action="add">
					<Order>1</Order>
					<CommandLine>powershell.exe -NoProfile -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\FirstLogon.ps1' -Raw | Invoke-Expression;"</CommandLine>
				</SynchronousCommand>
			</FirstLogonCommands>
		</component>
	</settings>
	<Extensions xmlns="https://schneegans.de/windows/unattend-generator/">
		<ExtractScript>
param(
    [xml] $Document
);

foreach( $file in $Document.unattend.Extensions.File ) {
    $path = [System.Environment]::ExpandEnvironmentVariables( $file.GetAttribute( 'path' ) );
    mkdir -Path( $path | Split-Path -Parent ) -ErrorAction 'SilentlyContinue';
    $encoding = switch( [System.IO.Path]::GetExtension( $path ) ) {
        { $_ -in '.ps1', '.xml' } { [System.Text.Encoding]::UTF8; }
        { $_ -in '.reg', '.vbs', '.js' } { [System.Text.UnicodeEncoding]::new( $false, $true ); }
        default { [System.Text.Encoding]::Default; }
    };
    $bytes = $encoding.GetPreamble() + $encoding.GetBytes( $file.InnerText.Trim() );
    [System.IO.File]::WriteAllBytes( $path, $bytes );
}
		</ExtractScript>
		<File path="C:\Windows\Setup\Scripts\RemovePackages.ps1">
$selectors = @(
	'Microsoft.Microsoft3DViewer';
	'Microsoft.WindowsAlarms';
	'Microsoft.WindowsFeedbackHub';
	'Microsoft.GetHelp';
	'microsoft.windowscommunicationsapps';
	'Microsoft.WindowsMaps';
	'Microsoft.BingNews';
	'Microsoft.Office.OneNote';
	'Microsoft.OutlookForWindows';
	'Microsoft.People';
	'Microsoft.SkypeApp';
	'MicrosoftTeams';
	'MSTeams';
	'Microsoft.WindowsSoundRecorder';
	'Microsoft.Wallet';
	'Microsoft.BingWeather';
	'Microsoft.YourPhone';
	'Microsoft.ZuneVideo';
);
$getCommand = {
  Get-AppxProvisionedPackage -Online;
};
$filterCommand = {
  $_.DisplayName -eq $selector;
};
$removeCommand = {
  [CmdletBinding()]
  param(
    [Parameter( Mandatory, ValueFromPipeline )]
    $InputObject
  );
  process {
    $InputObject | Remove-AppxProvisionedPackage -AllUsers -Online -ErrorAction 'Continue';
  }
};
$type = 'Package';
$logfile = 'C:\Windows\Setup\Scripts\RemovePackages.log';
&amp; {
	$installed = &amp; $getCommand;
	foreach( $selector in $selectors ) {
		$result = [ordered] @{
			Selector = $selector;
		};
		$found = $installed | Where-Object -FilterScript $filterCommand;
		if( $found ) {
			$result.Output = $found | &amp; $removeCommand;
			if( $? ) {
				$result.Message = "$type removed.";
			} else {
				$result.Message = "$type not removed.";
				$result.Error = $Error[0];
			}
		} else {
			$result.Message = "$type not installed.";
		}
		$result | ConvertTo-Json -Depth 3 -Compress;
	}
} *&gt;&amp;1 &gt;&gt; $logfile;
		</File>
		<File path="C:\Windows\Setup\Scripts\RemoveCapabilities.ps1">
$selectors = @(
	'Print.Fax.Scan';
);
$getCommand = {
  Get-WindowsCapability -Online | Where-Object -Property 'State' -NotIn -Value @(
    'NotPresent';
    'Removed';
  );
};
$filterCommand = {
  ($_.Name -split '~')[0] -eq $selector;
};
$removeCommand = {
  [CmdletBinding()]
  param(
    [Parameter( Mandatory, ValueFromPipeline )]
    $InputObject
  );
  process {
    $InputObject | Remove-WindowsCapability -Online -ErrorAction 'Continue';
  }
};
$type = 'Capability';
$logfile = 'C:\Windows\Setup\Scripts\RemoveCapabilities.log';
&amp; {
	$installed = &amp; $getCommand;
	foreach( $selector in $selectors ) {
		$result = [ordered] @{
			Selector = $selector;
		};
		$found = $installed | Where-Object -FilterScript $filterCommand;
		if( $found ) {
			$result.Output = $found | &amp; $removeCommand;
			if( $? ) {
				$result.Message = "$type removed.";
			} else {
				$result.Message = "$type not removed.";
				$result.Error = $Error[0];
			}
		} else {
			$result.Message = "$type not installed.";
		}
		$result | ConvertTo-Json -Depth 3 -Compress;
	}
} *&gt;&amp;1 &gt;&gt; $logfile;
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-01.ps1">
&lt;#
.SYNOPSIS
    Remove built-in apps (modern apps) from Windows 11 for All Users.

.DESCRIPTION
    This script will remove all built-in apps that are specified in the 'blacklistedapps' variable.
    The Black list (txt file) is hosted in Azure Blob storage or GitHub so it can be dynamically updated.
    Built-in apps listed in the txt file that are prefixed with a # will be considered eligible for removal.

    ##WARNING## 
    Use with caution, restoring deleted provisioning packages is not a simple process.

    ##TIP##
    If removing "MicrosoftTeams", also consider disabling the "Chat" icon on the taskbar, using INtune settingd catalog, as clicking this will re-install the appxpackage for the user.

.NOTES

    Idea based on an original script for Windows 10 app removal / Credit to: Nickolaj Andersen @ MSEndpointMgr
    Modifications to original script to Black list Appx instead of Whitelist

    FileName:    Remove-Appx-AllUsers-CloudSourceList.ps1
    Author:      Ben Whitmore
    Contact:     @byteben
    Date:        27th June 2022

#&gt;

Begin {

    #Log Function
    function Write-LogEntry {
        param (
            [parameter(Mandatory = $true)]
            [ValidateNotNullOrEmpty()]
            [string]$Value,
            [parameter(Mandatory = $false)]
            [ValidateNotNullOrEmpty()]
            [string]$FileName = "AppXRemoval.log",
            [switch]$Stamp
        )
    
        #Build Log File appending System Date/Time to output
        $LogFile = Join-Path -Path $env:SystemRoot -ChildPath $("Temp\$FileName")
        $Time = -join @((Get-Date -Format "HH:mm:ss.fff"), " ", (Get-WmiObject -Class Win32_TimeZone | Select-Object -ExpandProperty Bias))
        $Date = (Get-Date -Format "MM-dd-yyyy")
    
        If ($Stamp) {
            $LogText = "&lt;$($Value)&gt; &lt;time=""$($Time)"" date=""$($Date)""&gt;"
        }
        else {
            $LogText = "$($Value)"   
        }
        
        Try {
            Out-File -InputObject $LogText -Append -NoClobber -Encoding Default -FilePath $LogFile -ErrorAction Stop
        }
        Catch [System.Exception] {
            Write-Warning -Message "Unable to add log entry to $LogFile.log file. Error message at line $($_.InvocationInfo.ScriptLineNumber): $($_.Exception.Message)"
        }
    }
    
    #Function to Remove AppxProvisionedPackage
    Function Remove-AppxProvisionedPackageCustom {
    
        # Attempt to remove AppxProvisioningPackage
        if (!([string]::IsNullOrEmpty($BlackListedApp))) {
            try {
                
                # Get Package Name
                $AppProvisioningPackageName = Get-AppxProvisionedPackage -Online | Where-Object { $_.DisplayName -like $BlackListedApp } | Select-Object -ExpandProperty PackageName -First 1
                Write-Host "$($BlackListedApp) found. Attempting removal ... " -NoNewline
                Write-LogEntry -Value "$($BlackListedApp) found. Attempting removal ... "
    
                # Attempt removeal
                $RemoveAppx = Remove-AppxProvisionedPackage -PackageName $AppProvisioningPackageName -Online -AllUsers
                    
                #Re-check existence
                $AppProvisioningPackageNameReCheck = Get-AppxProvisionedPackage -Online | Where-Object { $_.DisplayName -like $BlackListedApp } | Select-Object -ExpandProperty PackageName -First 1
    
                If ([string]::IsNullOrEmpty($AppProvisioningPackageNameReCheck) -and ($RemoveAppx.Online -eq $true)) {
                    Write-Host @CheckIcon
                    Write-Host " (Removed)"
                    Write-LogEntry -Value "$($BlackListedApp) removed"
                }
            }
            catch [System.Exception] {
                Write-Host " (Failed)"
                Write-LogEntry -Value "Failed to remove $($BlackListedApp)"
            }
        }
    }

    Write-LogEntry -Value "##################################"
    Write-LogEntry -Stamp -Value "Remove-Appx Started"
    Write-LogEntry -Value "##################################"

    # Black List of Appx Provisioned Packages to Remove for All Users
    $BlackListedAppsURL = $null
    $BlackListedAppsURL = "https://raw.githubusercontent.com/teamreidtech/scripts/main/DefaultApps-Blacklist-With-XBOX.txt"
    Write-LogEntry -Value "BlackListedAppsURL:$($BlackListedAppsURL)"

    #Attempt to obtain list of BlackListedApps
    Try {
        $BlackListedAppsFile = $null
        $BlackListedAppsFile = (New-Object System.Net.WebClient).DownloadString($BlackListedAppsURL)
    } 
    Catch {
        Write-Warning $_.Exception
    }

    #Read apps from file and split lines
    $BlackListedAppsConvertToArray = $BlackListedAppsFile -split "`n" | Foreach-Object { $_.trim() }
    
    #Create array of bad apps
    $BlackListedAppsArray = New-Object -TypeName System.Collections.ArrayList
    Foreach ($App in $BlackListedAppsConvertToArray) {
        If ($App -like "#*") {
            $App = $App.trimStart("#")
            $BlackListedAppsArray.AddRange(@($App))
        }
    }

    #Define Icons
    $CheckIcon = @{
        Object          = [Char]8730
        ForegroundColor = 'Green'
        NoNewLine       = $true
    }

    #Define App Count
    [int]$AppCount = 0

    #OS Check
    $OS = (Get-CimInstance -ClassName Win32_OperatingSystem).BuildNumber
    Switch -Wildcard ( $OS ) {
        '21*' {
            $OSVer = "Windows 10"
            Write-Warning "This script is intended for use on Windows 11 devices. $($OSVer) was detected..."
            Write-LogEntry -Value "This script is intended for use on Windows 11 devices. $($OSVer) was detected..."

            Exit 1
        }
    }
}

Process {

    If ($($BlackListedAppsArray.Count) -ne 0) {

        Write-Output `n"The following $($BlackListedAppsArray.Count) apps were targeted for removal from the device:-"
        Write-LogEntry -Value "The following $($BlackListedAppsArray.Count) apps were targeted for removal from the device:-"
        Write-LogEntry -Value "Apps marked for removal:$($BlackListedAppsArray)"
        Write-Output ""
        $BlackListedAppsArray

        #Initialize list for apps not targeted
        $AppNotTargetedList = New-Object -TypeName System.Collections.ArrayList

        # Get Appx Provisioned Packages
        Write-Output `n"Gathering installed Appx Provisioned Packages..."
        Write-LogEntry -Value "Gathering installed Appx Provisioned Packages..."
        Write-Output ""
        $AppArray = Get-AppxProvisionedPackage -Online | Select-Object -ExpandProperty DisplayName

        # Loop through each Provisioned Package
        foreach ($BlackListedApp in $BlackListedAppsArray) {

            # Function call to Remove Appx Provisioned Packages defined in the Black List
            if (($BlackListedApp -in $AppArray)) {
                $AppCount ++
                Try {
                    Remove-AppxProvisionedPackageCustom -BlackListedApp $BlackListedApp -ErrorAction Stop
                }
                Catch {
                    Write-Warning `n"There was an error while attempting to remove $($BlakListedApp)"
                    Write-LogEntry -Value "There was an error when attempting to remove $($BlakListedApp)"
                }
            }
            else {
                $AppNotTargetedList.AddRange(@($BlackListedApp))
            }
        }

        #Update Output Information
        If (!([string]::IsNullOrEmpty($AppNotTargetedList))) { 
            Write-Output `n"The following apps were not removed. Either they were already removed or the Package Name is invalid:-"
            Write-LogEntry -Value "The following apps were not removed. Either they were already removed or the Package Name is invalid:-"
            Write-LogEntry -Value "$($AppNotTargetedList)"
            Write-Output ""
            $AppNotTargetedList
        }
        If ($AppCount -eq 0) {
            Write-Output `n"No apps were removed. Most likely reason is they had been removed previously."
            Write-LogEntry -Value "No apps were removed. Most likely reason is they had been removed previously."
        }
    }
    else {
        Write-Output "No Black List Apps defined in array"
        Write-LogEntry -Value "No Black List Apps defined in array"
    }
}
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-02.ps1">
&lt;#
.SYNOPSIS
    Remove built-in apps (modern apps) from Windows 11 for All Users.

.DESCRIPTION
    This script will remove all built-in apps that are specified in the 'blacklistedapps' variable.
    The Black list (txt file) is hosted in Azure Blob storage or GitHub so it can be dynamically updated.
    Built-in apps listed in the txt file that are prefixed with a # will be considered eligible for removal.

    ##WARNING## 
    Use with caution, restoring deleted provisioning packages is not a simple process.

    ##TIP##
    If removing "MicrosoftTeams", also consider disabling the "Chat" icon on the taskbar, using INtune settingd catalog, as clicking this will re-install the appxpackage for the user.

.NOTES

    Idea based on an original script for Windows 10 app removal / Credit to: Nickolaj Andersen @ MSEndpointMgr
    Modifications to original script to Black list Appx instead of Whitelist

    FileName:    Remove-Appx-AllUsers-CloudSourceList.ps1
    Author:      Ben Whitmore
    Contact:     @byteben
    Date:        27th June 2022

#&gt;

Begin {

    #Log Function
    function Write-LogEntry {
        param (
            [parameter(Mandatory = $true)]
            [ValidateNotNullOrEmpty()]
            [string]$Value,
            [parameter(Mandatory = $false)]
            [ValidateNotNullOrEmpty()]
            [string]$FileName = "AppXRemoval.log",
            [switch]$Stamp
        )
    
        #Build Log File appending System Date/Time to output
        $LogFile = Join-Path -Path $env:SystemRoot -ChildPath $("Temp\$FileName")
        $Time = -join @((Get-Date -Format "HH:mm:ss.fff"), " ", (Get-WmiObject -Class Win32_TimeZone | Select-Object -ExpandProperty Bias))
        $Date = (Get-Date -Format "MM-dd-yyyy")
    
        If ($Stamp) {
            $LogText = "&lt;$($Value)&gt; &lt;time=""$($Time)"" date=""$($Date)""&gt;"
        }
        else {
            $LogText = "$($Value)"   
        }
        
        Try {
            Out-File -InputObject $LogText -Append -NoClobber -Encoding Default -FilePath $LogFile -ErrorAction Stop
        }
        Catch [System.Exception] {
            Write-Warning -Message "Unable to add log entry to $LogFile.log file. Error message at line $($_.InvocationInfo.ScriptLineNumber): $($_.Exception.Message)"
        }
    }
    
    #Function to Remove AppxProvisionedPackage
    Function Remove-AppxProvisionedPackageCustom {
    
        # Attempt to remove AppxProvisioningPackage
        if (!([string]::IsNullOrEmpty($BlackListedApp))) {
            try {
                
                # Get Package Name
                $AppProvisioningPackageName = Get-AppxProvisionedPackage -Online | Where-Object { $_.DisplayName -like $BlackListedApp } | Select-Object -ExpandProperty PackageName -First 1
                Write-Host "$($BlackListedApp) found. Attempting removal ... " -NoNewline
                Write-LogEntry -Value "$($BlackListedApp) found. Attempting removal ... "
    
                # Attempt removeal
                $RemoveAppx = Remove-AppxProvisionedPackage -PackageName $AppProvisioningPackageName -Online -AllUsers
                    
                #Re-check existence
                $AppProvisioningPackageNameReCheck = Get-AppxProvisionedPackage -Online | Where-Object { $_.DisplayName -like $BlackListedApp } | Select-Object -ExpandProperty PackageName -First 1
    
                If ([string]::IsNullOrEmpty($AppProvisioningPackageNameReCheck) -and ($RemoveAppx.Online -eq $true)) {
                    Write-Host @CheckIcon
                    Write-Host " (Removed)"
                    Write-LogEntry -Value "$($BlackListedApp) removed"
                }
            }
            catch [System.Exception] {
                Write-Host " (Failed)"
                Write-LogEntry -Value "Failed to remove $($BlackListedApp)"
            }
        }
    }

    Write-LogEntry -Value "##################################"
    Write-LogEntry -Stamp -Value "Remove-Appx Started"
    Write-LogEntry -Value "##################################"

    # Black List of Appx Provisioned Packages to Remove for All Users
    $BlackListedAppsURL = $null
    $BlackListedAppsURL = "https://raw.githubusercontent.com/teamreidtech/scripts/main/DefaultApps-Blacklist-With-XBOX.txt"
    Write-LogEntry -Value "BlackListedAppsURL:$($BlackListedAppsURL)"

    #Attempt to obtain list of BlackListedApps
    Try {
        $BlackListedAppsFile = $null
        $BlackListedAppsFile = (New-Object System.Net.WebClient).DownloadString($BlackListedAppsURL)
    } 
    Catch {
        Write-Warning $_.Exception
    }

    #Read apps from file and split lines
    $BlackListedAppsConvertToArray = $BlackListedAppsFile -split "`n" | Foreach-Object { $_.trim() }
    
    #Create array of bad apps
    $BlackListedAppsArray = New-Object -TypeName System.Collections.ArrayList
    Foreach ($App in $BlackListedAppsConvertToArray) {
        If ($App -like "#*") {
            $App = $App.trimStart("#")
            $BlackListedAppsArray.AddRange(@($App))
        }
    }

    #Define Icons
    $CheckIcon = @{
        Object          = [Char]8730
        ForegroundColor = 'Green'
        NoNewLine       = $true
    }

    #Define App Count
    [int]$AppCount = 0

    #OS Check
    $OS = (Get-CimInstance -ClassName Win32_OperatingSystem).BuildNumber
    Switch -Wildcard ( $OS ) {
        '21*' {
            $OSVer = "Windows 10"
            Write-Warning "This script is intended for use on Windows 11 devices. $($OSVer) was detected..."
            Write-LogEntry -Value "This script is intended for use on Windows 11 devices. $($OSVer) was detected..."

            Exit 1
        }
    }
}

Process {

    If ($($BlackListedAppsArray.Count) -ne 0) {

        Write-Output `n"The following $($BlackListedAppsArray.Count) apps were targeted for removal from the device:-"
        Write-LogEntry -Value "The following $($BlackListedAppsArray.Count) apps were targeted for removal from the device:-"
        Write-LogEntry -Value "Apps marked for removal:$($BlackListedAppsArray)"
        Write-Output ""
        $BlackListedAppsArray

        #Initialize list for apps not targeted
        $AppNotTargetedList = New-Object -TypeName System.Collections.ArrayList

        # Get Appx Provisioned Packages
        Write-Output `n"Gathering installed Appx Provisioned Packages..."
        Write-LogEntry -Value "Gathering installed Appx Provisioned Packages..."
        Write-Output ""
        $AppArray = Get-AppxProvisionedPackage -Online | Select-Object -ExpandProperty DisplayName

        # Loop through each Provisioned Package
        foreach ($BlackListedApp in $BlackListedAppsArray) {

            # Function call to Remove Appx Provisioned Packages defined in the Black List
            if (($BlackListedApp -in $AppArray)) {
                $AppCount ++
                Try {
                    Remove-AppxProvisionedPackageCustom -BlackListedApp $BlackListedApp -ErrorAction Stop
                }
                Catch {
                    Write-Warning `n"There was an error while attempting to remove $($BlakListedApp)"
                    Write-LogEntry -Value "There was an error when attempting to remove $($BlakListedApp)"
                }
            }
            else {
                $AppNotTargetedList.AddRange(@($BlackListedApp))
            }
        }

        #Update Output Information
        If (!([string]::IsNullOrEmpty($AppNotTargetedList))) { 
            Write-Output `n"The following apps were not removed. Either they were already removed or the Package Name is invalid:-"
            Write-LogEntry -Value "The following apps were not removed. Either they were already removed or the Package Name is invalid:-"
            Write-LogEntry -Value "$($AppNotTargetedList)"
            Write-Output ""
            $AppNotTargetedList
        }
        If ($AppCount -eq 0) {
            Write-Output `n"No apps were removed. Most likely reason is they had been removed previously."
            Write-LogEntry -Value "No apps were removed. Most likely reason is they had been removed previously."
        }
    }
    else {
        Write-Output "No Black List Apps defined in array"
        Write-LogEntry -Value "No Black List Apps defined in array"
    }
}
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-03.ps1">
winget install Adobe.Acrobat.Reader.64-bit --exact --silent --accept-package-agreements --accept-source-agreements --disable-interactivity --ignore-warnings
winget install Dell.CommandUpdate.Universal --exact --silent --accept-package-agreements --accept-source-agreements --disable-interactivity --ignore-warnings
		</File>
		<File path="C:\Windows\Setup\Scripts\Specialize.ps1">
$scripts = @(
	{
		Remove-Item -LiteralPath 'Registry::HKLM\Software\Microsoft\WindowsUpdate\Orchestrator\UScheduler_Oobe\OutlookUpdate' -Force -ErrorAction 'SilentlyContinue';
	};
	{
		reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Communications" /v ConfigureChatAutoInstall /t REG_DWORD /d 0 /f;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\RemovePackages.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\RemoveCapabilities.ps1' -Raw | Invoke-Expression;
	};
	{
		net.exe accounts /maxpwage:UNLIMITED;
	};
	{
		reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f
	};
	{
		icacls.exe C:\ /remove:g "*S-1-5-11"
	};
	{
		reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Dsh" /v AllowNewsAndInterests /t REG_DWORD /d 0 /f;
	};
	{
		reg.exe add "HKLM\Software\Policies\Microsoft\Windows\CloudContent" /v "DisableWindowsConsumerFeatures" /t REG_DWORD /d 0 /f;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-01.ps1' -Raw | Invoke-Expression;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to customize your Windows installation. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "C:\Windows\Setup\Scripts\Specialize.log";
		</File>
		<File path="C:\Windows\Setup\Scripts\UserOnce.ps1">
$scripts = @(
	{
		Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name 'LaunchTo' -Type 'DWord' -Value 1;
	};
	{
		Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Search' -Name 'SearchboxTaskbarMode' -Type 'DWord' -Value 3;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to configure this user account. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "$env:TEMP\UserOnce.log";
		</File>
		<File path="C:\Windows\Setup\Scripts\DefaultUser.ps1">
$scripts = @(
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "HideFileExt" /t REG_DWORD /d 0 /f;
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowTaskViewButton /t REG_DWORD /d 0 /f;
	};
	{
		$names = @(
		  'ContentDeliveryAllowed';
		  'FeatureManagementEnabled';
		  'OEMPreInstalledAppsEnabled';
		  'PreInstalledAppsEnabled';
		  'PreInstalledAppsEverEnabled';
		  'SilentInstalledAppsEnabled';
		  'SoftLandingEnabled';
		  'SubscribedContentEnabled';
		  'SubscribedContent-310093Enabled';
		  'SubscribedContent-338387Enabled';
		  'SubscribedContent-338388Enabled';
		  'SubscribedContent-338389Enabled';
		  'SubscribedContent-338393Enabled';
		  'SubscribedContent-353698Enabled';
		  'SystemPaneSuggestionsEnabled';
		);
		
		foreach( $name in $names ) {
		  reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v $name /t REG_DWORD /d 0 /f;
		}
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\RunOnce" /v "UnattendedSetup" /t REG_SZ /d "powershell.exe -NoProfile -Command \""Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\UserOnce.ps1' -Raw | Invoke-Expression;\""" /f;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to modify the default user&#x2019;&#x2019;s registry hive. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "C:\Windows\Setup\Scripts\DefaultUser.log";
		</File>
		<File path="C:\Windows\Setup\Scripts\FirstLogon.ps1">
$scripts = @(
	{
		Set-ItemProperty -LiteralPath 'Registry::HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon' -Name 'AutoLogonCount' -Type 'DWord' -Force -Value 0;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-02.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-03.ps1' -Raw | Invoke-Expression;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to finalize your Windows installation. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "C:\Windows\Setup\Scripts\FirstLogon.log";
		</File>
	</Extensions>
</unattend>